# -*- coding: utf-8 -*-
"""yolov5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OKD_af3CGHt924JmDJDl5ZZCGspZvsbb

Reference: https://pytorch.org/hub/ultralytics_yolov5/

This code is to run YOLOv5s on VisDrone2019 data set and save the annotations
"""

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# pip install -qr https://raw.githubusercontent.com/ultralytics/yolov5/master/requirements.txt  # install dependencies

import torch
# Model
model = torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained=True)

from google.colab import drive
drive.mount('/content/drive')

# import the modules
import os
from os import listdir
import numpy as np

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My Drive/VisDrone2019-DET-test-dev/images
# get the path/directory
folder_dir = "/content/drive/My Drive/VisDrone2019-DET-test-dev/images"

open("Results.txt","w").close()

file = open("Results.txt","w")

# Commented out IPython magic to ensure Python compatibility.
folder_dir = "/content/drive/My Drive/VisDrone2019-DET-test-dev/images"
# %cd /content/drive/My Drive/VisDrone2019-DET-test-dev/images
for imgs in os.listdir(folder_dir):
  # Inference
  if (imgs.endswith(".jpg")):
    results = model(imgs)
    # Results
    #results.print()
    #results.save()  # or .show()
    r = results.xyxy[0].numpy()
    np.savetxt("Results.txt", r,'%d %d %d %d %d %d')
    save_file_path = os.path.join("/content/drive/My Drive/VisDrone2019-DET-test-dev/anno",imgs + "_result.txt")
    print("Result is saved at: " + save_file_path)
    np.savetxt(save_file_path, r)

for imgs in os.listdir(folder_dir):
  # Inference
  if (imgs.endswith(".jpg")):
    results = model(imgs)
    # Results
    r = results.xyxy[0].cpu()
    np.savetxt("Results.txt", r,'%d %d %d %d %d %d')

"""Example of one image in the folder and the output."""

results = model(os.listdir(folder_dir)[15])

results.print()
results.show()
results.xyxy[0]
results.pandas().xyxy[0]  
# xmin    ymin    xmax   ymax  confidence  class    name

"""## Citation

[![DOI](https://zenodo.org/badge/264818686.svg)](https://zenodo.org/badge/latestdoi/264818686)

"""